Создание новостного портала:

1. Создать двух пользователей (с помощью метода User.objects.create_user('username')).
from news.models import *
>>> User.objects.create_user("Алексей")
<User: Алексей>
>>> User.objects.create_user("Виктория")
<User: Виктория>

2.Создать два объекта модели Author, связанные с пользователями
 Author.objects.create(author=User.objects.get(username='Алексей'))
 Author.objects.create(author=User.objects.get(username='Виктория'))

3.Добавить 4 категории в модель Category.
 Category.objects.create(name_category = "politics")
Category.objects.create(name_category = "sport")
 Category.objects.create(name_category = "pogoda")
Category.objects.create(name_category = "economy")

4.Добавить 2 статьи и 1 новости
Post.objects.create(post=Author(pk=1), type_post = "article",header_post = "Vaznoe", text_post = "Умер кродил Гена")
Post.objects.create(post=Author(pk=2), type_post = "article",header_post = "Vaznoe", text_post = "У чебурашки родился сын")
Post.objects.create(post=Author(pk=2), type_post = "news",header_post = "Vaznoe", text_post = "Волк съел трех поросят")

5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
PostCategory.objects.create(post_category= Post.objects.get(pk=2),category = Category.objects.get(name_category = "Economy"))
PostCategory.objects.create(post_category= Post.objects.get(pk=2),category = Category.objects.get(name_category = "sport"))
PostCategory.objects.create(post_category= Post.objects.get(pk=3),category = Category.objects.get(name_category = "politics"))
PostCategory.objects.create(post_category= Post.objects.get(pk=3),category = Category.objects.get(name_category = "sport"))

6.Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
Comment.objects.create(comment=Post.objects.get(pk=1),user_comment = User.objects.get(username="Алексей"),text_comment = "Познавательно!")
Comment.objects.create(comment=Post.objects.get(pk=1),user_comment = User.objects.get(username="Алексей"),text_comment = "Отлично!")
Comment.objects.create(comment=Post.objects.get(pk=1),user_comment = User.objects.get(username="Виктория"),text_comment = "Не интересно!")
Comment.objects.create(comment=Post.objects.get(pk=1),user_comment = User.objects.get(username="Виктория"),text_comment = "Зачем я это прочитал!")

7.Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
Post.objects.get(pk=1)
Post.objects.get(pk=1).like()
Post.objects.get(pk=2).dislike()

8.Обновить рейтинги пользователей.
Author.objects.get(pk=1).update_rating()
Author.objects.get(pk=2).update_rating()

9. Вывести username и рейтинг лучшего пользователя;
Author.objects.all().order_by('-rating_author').values('author', 'rating_author')[0]

10.Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье;
Не знаю как делать.

11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
Comment.objects.filter(pk=2).values('date_comment', 'user_comment', 'rating_comment', 'text_comment')